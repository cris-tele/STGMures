// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;

namespace StgMures.Shared.DbModels;

/// <summary>
/// Contains the list of possible diagnostics. 
/// It is a circular database: a diagnostic can have parent (parentID is not null).
/// A diagnostic can have multiple &apos;child diagnostics&apos; (not viceversa), and I will limit the number of levels to 4.
/// If parent ID is not null, ValueType is ignored (null or &apos;p&apos;).
/// 
/// </summary>
public partial class Diagnostic
{
    /// <summary>
    /// ValueType may be 
    /// </summary>
    public int Id { get; set; }

    public int ParentId { get; set; }

    public int DiagnosticCategoryId { get; set; }

    /// <summary>
    /// Name of the diagnostic
    /// </summary>
    public string Name { get; set; } = null!;

    /// <summary>
    /// Determine the other fields usage: Note, MinAlert, MaxAlert 
    /// </summary>
    public string ValueFormat { get; set; } = null!;

    /// <summary>
    /// Min alert value (normal values between min and max); NOT USED
    /// </summary>
    public string? MinAlertValue { get; set; }

    /// <summary>
    /// Max alert value (normal values between min and max); NOT USED
    /// </summary>
    public string? MaxAlertValue { get; set; }

    public string? Note { get; set; }

    public string? MeasureUnit { get; set; }

    public virtual DiagnosticCategory DiagnosticCategory { get; set; } = null!;

    public virtual ICollection<PatientAssocDisease> PatientAssocDiseases { get; } = new List<PatientAssocDisease>();

    public virtual ICollection<PatientDiagnostic> PatientDiagnostics { get; } = new List<PatientDiagnostic>();
}