@inherits LayoutComponentBase

@inject StgMures.Client.Services.ITreatmentCategoryService appBar

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
   
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <!-- _currentPageTitle -->
        <AuthorizeView>
            <Authorized>
            <MudSpacer />
                <MudButton StartIcon="@Icons.Material.Filled.MedicalServices" Color="Color.Error" Variant="Variant.Text">@context.User.Identity!.Name </MudButton>
            <MudSpacer />
            <MudButton StartIcon="@Icons.Material.Outlined.MedicalInformation" Color="Color.Error" Variant="Variant.Text">@_patientName</MudButton>
            <MudSpacer />
            </Authorized>
        </AuthorizeView>
        <MudSpacer />
        <MudText Color="Color.Error">S.T.G. Mures ATI</MudText>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    string _medicName =string.Empty;
    string _patientName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1); // let UI refresh
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    private void GetMedic(string medic= "")       
    {
        _medicName = "Medic: ";
        if (medic.Length > 0)
            _medicName = $"Medic: {medic}";

    }
    private void GetPatient(string patient = "")
    {
        _patientName = "Pacient: ";
        if (patient.Length > 0)
            _patientName += $"Pacient: {patient}" ;
    }

}

