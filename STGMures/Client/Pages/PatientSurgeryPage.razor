@page "/PatientSurgeryPage"
@page "/PatientSurgeryPage/{PatientID:int}" 


@using StgMures.Shared.DbModels
@inject MudBlazor.ISnackbar snackBar
@inherits PageBehavior

@inject IPatientSurgeryService patientSurgeryService
@inject ISetAppMenuInfos SetAppMenuInfos

<!-- Presumption: a patient file refers only one surgery. Create a new patient file , one for each surgery procedure-->
<!-- will be rezised after first version -->
<!--edit card-->
<MudCard Elevation="5" >
    <MudItem xs="1">
        <MudAutocomplete Disabled="true" @bind-Value="_currentSurgery.PatientFileId" Label="Numar fisa" Variant="Variant.Text" Margin="Margin.None"></MudAutocomplete>
    </MudItem>

    <MudText> Operatie</MudText>
    <MudGrid>
        <!--Class="border" de studiat-->
        <MudItem xs="1">
            <!-- blanc-->            
        </MudItem>
        <MudItem xs="1">
            <MudTextField Disabled="@_disabledField" @bind-Value="_currentSurgery.Date"  Label="Data Operatiei" Format="dd/mm/yyyy" InputType="InputType.DateTimeLocal" Variant="Variant.Text" Margin="Margin.None" T="DateTime"></MudTextField>
        </MudItem>
        <MudItem xs="2">
            <MudTextField Disabled="true" @bind-Value="_currentSurgery.IncisionType" Label="Tip Incizie" Variant="Variant.Text" Margin="Margin.None"></MudTextField>
        </MudItem>
        <MudItem xs="1">
            <MudNumericField Disabled="true" HideSpinButtons="true" @bind-Value="_currentSurgery.Duration" Variant="Variant.Text" Margin="Margin.Dense"  Label="Durata operatie" HelperText="(min)"></MudNumericField>
        </MudItem>
        <MudItem xs="1">
            <MudNumericField Disabled="true" HideSpinButtons="true" @bind-Value="_currentSurgery.CecDuration" Variant="Variant.Text" Margin="Margin.Dense" Label="Durata C.E.C." HelperText="(min)"></MudNumericField>
        </MudItem>
        <MudItem xs="1">
            <MudNumericField Disabled="true" HideSpinButtons="true" @bind-Value="_currentSurgery.AorticClampDuration" Variant="Variant.Text" Margin="Margin.Dense" Label="Clamp Aortic" HelperText="(min)"></MudNumericField>
        </MudItem>
        <MudItem xs="1">
            <MudCheckBox Disabled="@_disabledField" @bind-Checked="_currentSurgery.Reoperation"  Label="Reoperat" LabelPosition="LabelPosition.Start"></MudCheckBox>
        </MudItem>
        <MudItem xs="1">
            <MudTextField Disabled="@_disabledField" @bind-Value="_currentSurgery.ReoperationDate" Label="Reoperat" Format="dd/mm/yyyy" InputType="InputType.DateTimeLocal" Variant="Variant.Text" Margin="Margin.None" T="DateTime?"></MudTextField>
        </MudItem>
    </MudGrid>
    
    <MudDivider  DividerType="DividerType.Inset" />
    <MudText> C.E.C </MudText>

    <MudGrid>
        <MudItem xs="1">
            <!-- blanc-->
        </MudItem>
        <MudItem xs="1">
            <MudNumericField Disabled="_disabledField" HideSpinButtons="true" @bind-Value="_currentCec.BypasDuration" Variant="Variant.Text" Margin="Margin.Dense" HelperText="(min)"></MudNumericField>
        </MudItem>
        <MudItem xs="1">
            <MudNumericField Disabled="_disabledField" HideSpinButtons="true" @bind-Value="_currentCec.BypasTemperature" Variant="Variant.Text" Margin="Margin.Dense" HelperText="Celsius"></MudNumericField>
        </MudItem>
        <MudItem xs="1">
            <MudNumericField Disabled="_disabledField" HideSpinButtons="true" @bind-Value="_currentCec.BypasTemperatureTop" Variant="Variant.Text" Margin="Margin.Dense" HelperText="Celsius"></MudNumericField>
        </MudItem>
        <MudItem xs="1">
            <MudNumericField Disabled="_disabledField" HideSpinButtons="true" @bind-Value="_currentCec.AorticClampingDuration" Variant="Variant.Text" Margin="Margin.Dense" HelperText="(min)"></MudNumericField>
        </MudItem>
        <MudItem xs="1">
            <MudNumericField Disabled="_disabledField" HideSpinButtons="true" @bind-Value="_currentCec.AorticClampingTemperature" Variant="Variant.Text" Margin="Margin.Dense" HelperText="Celsius"></MudNumericField>
        </MudItem>
        <MudItem xs="1">
            <MudNumericField Disabled="_disabledField" HideSpinButtons="true" @bind-Value="_currentCec.AorticClampingTemperatureTop" Variant="Variant.Text" Margin="Margin.Dense" HelperText="Celsius"></MudNumericField>
        </MudItem>
        <MudItem xs="1">
            <MudNumericField Disabled="_disabledField" HideSpinButtons="true" @bind-Value="_currentCec.Flow" Variant="Variant.Text" Margin="Margin.Dense" HelperText="(min)"></MudNumericField>
        </MudItem>
        <MudItem xs="1">
            <MudNumericField Disabled="_disabledField" HideSpinButtons="true" @bind-Value="_currentCec.Priming" Variant="Variant.Text" Margin="Margin.Dense" HelperText="(min)"></MudNumericField>
        </MudItem>
        <MudItem xs="1">
            <MudTextField Disabled="true" @bind-Value="_currentCec.Oxigenator" Label="Oxigenator" Variant="Variant.Text" Margin="Margin.None"></MudTextField>
        </MudItem>
        <MudItem xs="1">
            <MudCheckBox Disabled="@_disabledField" @bind-Checked="_currentCec.Muff" Label="MUFF" LabelPosition="LabelPosition.Start"></MudCheckBox>
        </MudItem>
        <MudItem xs="1">
            <MudCheckBox Disabled="@_disabledField" @bind-Checked="_currentCec.Ultrafiltering" Label="Ultra" LabelPosition="LabelPosition.Start"></MudCheckBox>
        </MudItem>
    </MudGrid>
    <MudGrid>
        <MudItem xs="1">
            <!-- blanc-->
        </MudItem>
        <MudItem xs="11">
            <MudTextField Disabled="@_disabledField" @bind-Value="_currentCec.Note" Lines="2" Label="Observatii"></MudTextField>
        </MudItem>
    </MudGrid>

    <MudDivider DividerType="DividerType.Inset" />

    <MudText> Anestezia </MudText>
    <MudGrid>
        <MudItem xs="1">
            <!-- blanc-->
        </MudItem>
        <MudItem xs="1">
            <MudTextField Disabled="@_disabledField" @bind-Value="_currentAnesthesia.Date" Label="Data" Format="dd/mm/yyyy" InputType="InputType.DateTimeLocal" Variant="Variant.Text" Margin="Margin.None" T="DateTime"></MudTextField>
        </MudItem>
        <MudItem xs="1">
            <MudNumericField Disabled="true" HideSpinButtons="true" @bind-Value="_currentAnesthesia.Duration" Variant="Variant.Text" Margin="Margin.Dense" HelperText="(min)"></MudNumericField>
        </MudItem>
        <MudItem xs="1">
            <MudCheckBox Disabled="@_disabledField" @bind-Checked="_currentAnesthesia.Type" Label="Reoperare" LabelPosition="LabelPosition.Start"></MudCheckBox>
        </MudItem>
        <MudItem xs="7">
            <MudTextField Disabled="@_disabledField" @bind-Value="_currentAnesthesia.Name" Label="Observatii"></MudTextField>
        </MudItem>
    </MudGrid>
    <p></p>
    <MudDivider DividerType="DividerType.FullWidth" Class="border-3 border-solid mud-border-primary" />
    <MudCardActions>
        <MudGrid>
            <MudItem xs="1">
                <MudTooltip Text="Adauga o noua inregistrare">
                    <MudIconButton Disabled="@_disabledBtn" Icon="@Icons.Material.Filled.Add" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="AddNewRecord">Adauga</MudIconButton>
                </MudTooltip>

                <MudTooltip Text="Modifica inregistrarea selectata">
                    <MudIconButton Disabled="@_disabledBtn" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="UpdateRecord">Modifica</MudIconButton>
                </MudTooltip>

                <MudTooltip Text="Sterge inregistrarea selectata">
                    <MudIconButton Disabled="@_disabledBtn" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="DeleteRecord">Sterge</MudIconButton>
                </MudTooltip>
            </MudItem>
            <MudItem xs="1" />
            <MudItem xs="1">
                <MudTooltip Text="Validare">
                    <MudIconButton Disabled="@_disabledBtnValid" Icon="@Icons.Material.Filled.Save" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="ValidateAction">Ok</MudIconButton>
                </MudTooltip>
                <MudTooltip Text="Renuntare">
                    <MudIconButton Disabled="@_disabledBtnValid" Icon="@Icons.Material.Filled.Cancel" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="DisableAll">Cancel</MudIconButton>
                </MudTooltip>
            </MudItem>
        </MudGrid>
    </MudCardActions>

</MudCard>
<br />

<MudTabs Outlined="true">
    <MudTabPanel Text="Proceduri operatorii">
    </MudTabPanel>
    <MudTabPanel Text="Consumabile C.E.C">
        <SurgeriesCECs/>
    </MudTabPanel>
    <MudTabPanel Text="Consumabile Anestezie">
        <SurgeryAnesthesiaPage/>
    </MudTabPanel>
</MudTabs>


<!--table list-->
<MudTable @ref="@_table" Hover="true" Dense="true" Striped="true" Elevation="5"
          Items="@surgeries"  @bind-customer="surgery" OnRowClick="@RowClicked" T="PatientSurgery">
    <HeaderContent>
        <MudTh>ID</MudTh>
        <MudTh>Data</MudTh>
        <MudTh>Incizie</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd Class="col-1" DataLabel="Id">@context.Id</MudTd>
        <MudTd Class="col-2" DataLabel="Tip">@context.Date</MudTd>
        <MudTd Class="col-9" DataLabel="Denumire">@context.IncisionType</MudTd>
    </RowTemplate>

</MudTable>




@code {
    // card design
    private Patient _currentPatient = new Patient();
    private PatientSurgery _currentSurgery = new ();        
    private Cec _currentCec = new();                        // one-to-one Surgery
    private SurgeryAnesthesium _currentAnesthesia = new();  // one-to-one Surgery

    private List<Patient> _patientsList = new List<Patient>();


    // table design
    private MudTable<PatientSurgery>? _table;


    // data
    private PatientSurgery surgery = new PatientSurgery();
    private List<PatientSurgery> surgeries = new List<PatientSurgery>();

    protected override async Task OnInitializedAsync()
    {
        SetAppMenuInfos.SetPageTitle("Operatii Pacient");
        // SetAppMenuInfos.SetSelectedPatient(_currentPatient!.FirstName + " " + _currentPatient!.LastName);   // trebuie sa fie un pacient selectat. Daca nu e, ar trebui sa oblig alegerea unui pacient

        await patientSurgeryService.LoadPatientSurgeriesAsync();
        surgeries = patientSurgeryService.PatientSurgeries;
        if (surgeries.Count == 0)
            EnableAll();

    }



    protected void RowClicked(TableRowClickEventArgs<PatientSurgery> clickedCategory)
    {
        if (_table!.GetFilteredItemsCount() == 0)
            EnableAll();
        if (_table!.SelectedItem == null)
            return;
        SelectCurrentItem(clickedCategory.Item.Id);
        EnableAll();
    }



    private async Task ValidateAction()
    {
        switch (_currentAction)
        {
            case (int)_actionbtn.None:
                DisableAll();            // Invalid action, disable all
                return;
            case (int)_actionbtn.Add:
                await patientSurgeryService.AddPatientSurgery(surgery);
                snackBar.Add("Inregistrare adaugata", Severity.Success);
                break;
            case (int)_actionbtn.Edit:
                await patientSurgeryService.UpdatePatientSurgery(surgery);
                snackBar.Add("Inregistrare modificata", Severity.Success);
                break;
            case (int)_actionbtn.Delete:
                if (surgery.Id == 0)               // Invalid selection
                    return;
                await patientSurgeryService.DeletePatientSurgery(surgery.Id);
                snackBar.Add("Inregistrare stearsa", Severity.Success);
                break;
        }

        _currentAction = 0;
        surgeries = patientSurgeryService.PatientSurgeries;

        DisableAll();

        await Task.Delay(1); // let UI refresh
    }

    // movers
    private string searchString = "";

    private void SelectCurrentItem(int id)
    {
        surgery = surgeries.FirstOrDefault(c => c.Id == id);
    }

    private bool Search(PatientSurgery surgery)
    {
        if (string.IsNullOrWhiteSpace(searchString)) return true;
/*
        if (surgery.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            return true;
        }
*/

        return false;
    }

}
