@page "/DiagnosticCategories"

@using StgMures.Shared.DbModels
@inherits PageBehavior

@inject StgMures.Client.Services.IDiagnosticCategoryService categoryService
@inject MudBlazor.ISnackbar snackBar
@inject ISetAppMenuInfos SetAppMenuInfos


<!--edit card-->
<MudCard Elevation="5">
<!--    <MudCardHeader >  </MudCardHeader> --> <!--Nu stiu daca voi folosi-->
    <MudCardContent >
        <MudGrid>
            <MudItem xs="1">
                <MudTextField Class="invisible"  Disabled="true" @bind-Value="category.Id" Variant="Variant.Text" Margin="Margin.None"></MudTextField>
            </MudItem>
            <MudItem xs="2">
                <MudSelect Disabled="@SetAppMenuInfos.DisabledState" T="string" AnchorOrigin="Origin.BottomCenter" @bind-Value="category.Type" HelperText="Grupa de diagnostice" Variant="Variant.Text" Margin="Margin.None">
                @foreach (var _option in StaticParam.TypeOfDiagnosticCategories)
                {
                    <MudSelectItem Value="@_option" />
                }
                </MudSelect>
            </MudItem>
            <MudItem xs="8">
                <MudTextField Disabled="@SetAppMenuInfos.DisabledState" @bind-Value="category.Name" HelperText="Denumire categorie diagnostice" Variant="Variant.Text" Margin="Margin.None"></MudTextField>
            </MudItem>
        </MudGrid>
    </MudCardContent>

    <MudDivider DividerType="DividerType.FullWidth" Class="border-3 border-solid mud-border-primary" />

    <MudCardActions>
        <MudGrid>
            <MudItem xs="1">
                <MudTooltip Text="Adauga o noua inregistrare">
                    <MudIconButton Disabled="@_disabledBtn" Icon="@Icons.Material.Filled.Add" Size="Size.Small" Variant="Variant.Text" Color="Color.Primary" OnClick="AddNewRecord">Adauga</MudIconButton>
                </MudTooltip>

                <MudTooltip Text="Modifica inregistrarea selectata">
                    <MudIconButton Disabled="@_disabledBtn" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Variant="Variant.Text" Color="Color.Primary" OnClick="UpdateRecord">Modifica</MudIconButton>
                </MudTooltip>

                <MudTooltip Text="Sterge inregistrarea selectata">
                    <MudIconButton Disabled="@_disabledBtn" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" Variant="Variant.Text" Color="Color.Primary" OnClick="DeleteRecord">Sterge</MudIconButton>
                </MudTooltip>
            </MudItem>
            <MudItem xs="1" />
            <MudItem xs="1">
                <MudTooltip Text="Validare">
                    <MudIconButton Disabled="@_disabledBtnValid" Icon="@Icons.Material.Filled.Save" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="ValidateAction">Ok</MudIconButton>
                </MudTooltip>
                <MudTooltip Text="Renuntare">
                    <MudIconButton Disabled="@_disabledBtnValid" Icon="@Icons.Material.Filled.Cancel" Size="Size.Small" Variant="Variant.Text" Color="Color.Error" OnClick="DisableAll">Cancel</MudIconButton>
                </MudTooltip>
            </MudItem>
        </MudGrid>
    </MudCardActions>
</MudCard>
<br />


<!--table list-->
<MudTable @ref="@_table" Hover="true" Dense="true" Striped="true" Elevation="5"
          Items="@categories" Filter="new Func<DiagnosticCategory, bool>(Search)" @bind-customer="category" OnRowClick="@RowClicked" T="DiagnosticCategory">
    <ToolBarContent>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Cautati o categorie..." Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh Class="invisible">ID</MudTh>
        <MudTh Class="col-2">Grupa de diagnostice</MudTh>
        <MudTh Class="col-9">Denumire categorie</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd Class="invisible">@context.Id</MudTd>     
        <MudTd Class="col-2"    >@context.Type</MudTd>
        <MudTd Class="col-9"    >@context.Name
            <MudIconButton Class="invisible" @onclick="@(()=>SelectCurrentItem(@context.Id))" Color="Color.Primary" Icon="@Icons.Material.Filled.Sync" Size="Size.Small"  />
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager RowsPerPageString="Randuri pagina:" PageSizeOptions="@(new int[] { 10, 25, 50 , int.MaxValue})"> R</MudTablePager>
    </PagerContent>

</MudTable>




@code {
    // card design 


    // table design
    private MudTable<DiagnosticCategory>? _table;

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            _table.SetRowsPerPage(10);
        return base.OnAfterRenderAsync(firstRender);
    }


    // data
    private DiagnosticCategory category = new DiagnosticCategory() { Id = 0, Name = string.Empty };
    private List<DiagnosticCategory> categories = new List<DiagnosticCategory>();

    protected override async Task OnInitializedAsync()
    {
        SetAppMenuInfos.SetPageTitle("Categorii de diagnostice");
        await categoryService.LoadDiagnosticCategoriesAsync();
        categories = categoryService.Categories;
        if (categories.Count == 0)
            EnableAll();

    }



    protected void RowClicked(TableRowClickEventArgs<DiagnosticCategory> clickedCategory)
    {
        RowClicked(_table!);
        SelectCurrentItem(clickedCategory.Item.Id);
        EnableActionButtons();
    }



    private async Task ValidateAction()
    {
        switch (CurrentAction)
        {
            case (int)_actionbtn.None:
                DisableAll();            // Invalid action, disable all 
                return;
            case (int)_actionbtn.Add:
                await categoryService.AddDiagnosticCategory(category);
                snackBar.Add("Inregistrare adaugata", Severity.Success);
                break;
            case (int)_actionbtn.Edit:
                await categoryService.UpdateDiagnosticCategory(category);
                snackBar.Add("Inregistrare modificata", Severity.Success);
                break;
            case (int)_actionbtn.Delete:
                if (category.Id == 0)               // Invalid selection
                    return;
                await categoryService.DeleteDiagnosticCategory(category.Id);
                snackBar.Add("Inregistrare stearsa", Severity.Success);
                break;
        }

        _currentAction = 0;
        categories = categoryService.Categories;

        DisableAll();

        await Task.Delay(1); // let UI refresh
    }

    // movers
    private string searchString = "";

    private void SelectCurrentItem(int id)
    {
        category = categories.FirstOrDefault(c => c.Id == id);
    }

    private bool Search(DiagnosticCategory category)
    {
        if (string.IsNullOrWhiteSpace(searchString)) return true;

        if (category.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            return true;
        }
        return false;
    }

}
