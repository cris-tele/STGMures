@page "/PatientTreatmentPage"

@using StgMures.Shared.DbModels
@inherits _RazorPageBehaviorBase

@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@inject StgMures.Client.Services.ITreatmentTypeService treatmentService
@inject MudBlazor.ISnackbar snackBar
@inject ISetAppMenuInfos SetAppMenuInfos


<MudCard Elevation="5">
    <MudCardContent>
        <MudGrid>
            <MudItem xs="2">  <!-- tratamente se dau in toate aceste cazuri; va fi dat de pagina din care e accesat-->
                <MudSelect Disabled="@(!_disabledField)" T="string" AnchorOrigin="Origin.BottomCenter" @bind-Value="patienttreatment.TreatmentType" HelperText="Tip Tratament" Variant="Variant.Text" Margin="Margin.None">
                    @foreach (var _option in StaticParam.TreatmentType)
                    {
                        <MudSelectItem Value="@_option" />
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="2">
                <MudSelect Disabled="@_disabledField" T="int?" AnchorOrigin="Origin.BottomCenter" @bind-Value="patienttreatment.PatientDiagnosticId" HelperText="Diagnostic" Variant="Variant.Text" Margin="Margin.None">
                    @foreach (var _option in patientDiagnostics)
                    {
                        <MudSelectItem Value="@_option.ShortNote" />    <!-- trebuie un select, sa iau denumirea-->
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="1">
                <MudNumericField Disabled="@_disabledField" @bind-Value="patienttreatment.NoOfDays" HelperText="Nr.Zile" Variant="Variant.Text" Margin="Margin.None"></MudNumericField>
            </MudItem>
            <MudItem xs="1">
                <MudTextField Disabled="@_disabledField" @bind-Value="patienttreatment.WeekSchema" HelperText="Schema" Variant="Variant.Text" Margin="Margin.None"></MudTextField>
            </MudItem>
            <MudItem xs="1">
                <MudNumericField Disabled="@_disabledField" @bind-Value="patienttreatment.Dosage" HelperText="Dozaj" Variant="Variant.Text" Margin="Margin.None"></MudNumericField>
            </MudItem>
            <MudItem xs="1">
                <MudNumericField Disabled="@_disabledField" @bind-Value="patienttreatment.DosageQtty" HelperText="Nr.Doze" Variant="Variant.Text" Margin="Margin.None"></MudNumericField>
            </MudItem>
            <MudItem xs="1">
                <MudNumericField Disabled="@_disabledField" @bind-Value="patienttreatment.DosageTotal" HelperText="Dozaj Total" Variant="Variant.Text" Margin="Margin.None"></MudNumericField>
            </MudItem>
            <MudItem xs="3">    <!-- se ia din tratament, se poate schimba ? -->
                <MudSelect Disabled="@_disabledField" T="string" AnchorOrigin="Origin.BottomCenter" @bind-Value="patienttreatment.Administration" HelperText="Mod administrare" Variant="Variant.Text" Margin="Margin.None">
                    @foreach (var _option in StaticParam.TreatmentAdministrationMethod)
                    {
                        <MudSelectItem Value="@_option" />
                    }
                </MudSelect>
            </MudItem>
        </MudGrid>
        <MudGrid>
        <MudItem xs="12">
                <MudTextField Disabled="@_disabledField" @bind-Value="patienttreatment.Note" HelperText="Observatii" Variant="Variant.Outlined" Margin="Margin.None"></MudTextField>
        </MudItem>
        </MudGrid>
    </MudCardContent>

    <MudDivider DividerType="DividerType.FullWidth" Class="border-3 border-solid mud-border-primary" />

    <MudCardActions>
        <MudGrid>
            <MudItem xs="1">
                <MudTooltip Text="Adauga o noua inregistrare">
                    <MudIconButton Disabled="@_disabledBtn" Icon="@Icons.Material.Filled.Add" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="AddNewRecord">Adauga</MudIconButton>
                </MudTooltip>

                <MudTooltip Text="Modifica inregistrarea selectata">
                    <MudIconButton Disabled="@_disabledBtn" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="UpdateRecord">Modifica</MudIconButton>
                </MudTooltip>

                <MudTooltip Text="Sterge inregistrarea selectata">
                    <MudIconButton Disabled="@_disabledBtn" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="DeleteRecord">Sterge</MudIconButton>
                </MudTooltip>
            </MudItem>
            <MudItem xs="1" />
            <MudItem xs="1">
                <MudTooltip Text="Validare">
                    <MudIconButton Disabled="@_disabledBtnValid" Icon="@Icons.Material.Filled.Save" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="ValidateAction">Ok</MudIconButton>
                </MudTooltip>
                <MudTooltip Text="Renuntare">
                    <MudIconButton Disabled="@_disabledBtnValid" Icon="@Icons.Material.Filled.Cancel" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="ClearCurrentSelection">Cancel</MudIconButton>
                </MudTooltip>
            </MudItem>
        </MudGrid>
    </MudCardActions>
</MudCard>
<br />



@code {
    /*<button type="submit" class="btn btn-info "> Inregistreaza</button> */

    PatientTreatment patienttreatment = new PatientTreatment();
    List<Treatment> treatments = new();
    List <PatientDiagnostic> patientDiagnostics = new();

    async void HandlePatientTreatment()
    {
        // NavigationManager.NavigateTo("patientfile");

        /*
        var result = await AuthService.RegisterPatient(user);

            if (result.Success)
            {
            ToastService.ShowSuccess(result.Message);
            NavigationManager.NavigateTo("/");
            }
            else
            {
            ToastService.ShowError(result.Message);
    }
    */
    }

    void HandleInvalidDiagnostic()
    {
        // ToastService.ShowError("Internal ERROR");
    }

    void HandleTreatment(MouseEventArgs e)
    {
        NavigationManager.NavigateTo("patienttreatment");

    }

    protected override async Task OnInitializedAsync()
    {
        SetAppMenuInfos.SetPageTitle("Tratamente Pacient");
        // SetAppMenuInfos.SetSelectedPatient(_currentPatient!.FirstName + " " + _currentPatient!.LastName);   // trebuie sa fie un pacient selectat. Daca nu e, ar trebui sa oblig alegerea unui pacient

        await base.OnInitializedAsync();
    }
    private async Task ValidateAction()
    {
        await Task.Delay(1);
    }
}



