@page "/PatientFilePage"
@page "/PatientFilePage/{PatientId:int}"

@inject MudBlazor.ISnackbar snackBar
@inherits PageBehavior
@inject NavigationManager NavigationManager

<!--current pacient = selected patient in the patient list page-->
@inject IPatientFileService patientFileService

@inject ISetAppMenuInfos AppMenu


<!-- Usually, a patient has only one observation file-->
<!-- But, we a dealing with heart desease types of diagnostics, and there are too many case when:                                                       -->
<!-- - The patient stays in hospital for a long periood of time (cases of one year of hospitalisation )                                                 -->
<!-- - Or, more frequently, the patient comes back after a period of years, for another surgery or another treatment scheme, complete investigations... -->
<!-- So, one patient can have more than one file, and also the medical history is important                                                             -->
<!-- The last one must be the "default" one but the medical team can view/edit and older one                                                            -->

<!--edit card-->
<MudCard Elevation="5" >
    <MudCardContent >
        <MudGrid >
            <MudItem xs="1" >   <!-- info pacient -->
                <MudTextField Disabled="@_disabledField" @bind-Value="currentPatientFile.FileNumber" HelperText="Nr.Fisa/An" Mask="@(new PatternMask("000000/0000"))" InputType="InputType.Text" Variant="Variant.Text" ></MudTextField>
            </MudItem>

            <MudItem xs="1">
                <MudTextField Disabled="_disabledField" @bind-Value="currentPatientFile.Weight" HelperText="Greutate" Variant="Variant.Text" Margin="Margin.Dense" Adornment="Adornment.End" AdornmentText="Kg"></MudTextField>
            </MudItem>

            <MudItem xs="1">
                <MudTextField Disabled="_disabledField" @bind-Value="currentPatientFile.Height" HelperText="Inaltime" Variant="Variant.Text" Margin="Margin.Dense" Adornment="Adornment.End" AdornmentText="cm"></MudTextField>
            </MudItem>

            <MudItem xs="1">
                <MudNumericField Disabled="@_disabledField" HideSpinButtons="true" @bind-Value="currentPatientFile.Bmi" Variant="Variant.Text" Format="F2" HelperText="B.M.I"  Margin="Margin.Dense" ></MudNumericField>
            </MudItem>
            <MudItem xs="1">
                <MudNumericField Disabled="@_disabledField" HideSpinButtons="true" @bind-Value="currentPatientFile.Bsa" Variant="Variant.Text" Format="F2" HelperText="B.S.A" Margin="Margin.Dense"></MudNumericField>
            </MudItem>

            <MudItem xs="1" >  </MudItem> 

            <MudItem xs="6">
                <MudTextField Disabled="@_disabledField" HelperText="Nota: transfer alt spital" @bind-Value="currentPatientFile.AnotherHospitalAdmission" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
            </MudItem>
        </MudGrid>

        <MudGrid > 
            <MudItem xs="1"> </MudItem>
            <MudItem xs="1">
                <MudTextField Disabled="@_disabledField" HelperText="Internare Spital" @bind-Value="currentPatientFile.HospitalAdmissionDate" Format="yyyy-MM-dd" InputType="InputType.Date" Variant="Variant.Text" Culture="@roRo"></MudTextField>
            </MudItem>
            <!-- Ati -->
            <MudItem xs ="1"> </MudItem>

            <MudItem xs="1">
                <MudTextField Disabled="@_disabledField" @bind-Value="currentPatientFile.AtiTakeOverDate" HelperText="Internare ATI" Format="yyyy-MM-dd" InputType="InputType.Date" Variant="Variant.Text" Culture="@CultureInfo.GetCultureInfo("ro-RO")"></MudTextField>
            </MudItem>

            <MudItem xs="1">
                <MudTextField Disabled="@_disabledField" @bind-Value="currentPatientFile.AtiRetakeOverDate" HelperText="ReInternare ATI" Format="yyyy-MM-dd" InputType="InputType.Date" Variant="Variant.Text" Culture="@CultureInfo.GetCultureInfo("ro-RO")"></MudTextField>
            </MudItem>

            <MudItem xs="1">
                <MudNumericField Disabled="true" HideSpinButtons="true" @bind-Value="currentPatientFile.Atidays" HelperText="Zile ATI" Variant="Variant.Text" Margin="Margin.Dense"></MudNumericField>
            </MudItem>

            <!-- Sectie -->
            <MudItem xs="1"> </MudItem>
            <MudItem xs="1">
                <MudTextField Disabled="@_disabledField" @bind-Value="currentPatientFile.WardTransferDate" HelperText="Transfer sectie" Format="yyyy-MM-dd" InputType="InputType.Date" Variant="Variant.Text" Culture="@roRo"></MudTextField>
            </MudItem>

            <MudItem xs="1">
                <MudTextField Disabled="@_disabledField" @bind-Value="currentPatientFile.WardRetransferDate" HelperText="Retransfer sectie" Format="yyyy-MM-dd" InputType="InputType.Date" Variant="Variant.Text" Culture="@roRo"></MudTextField>
            </MudItem>

            <MudItem xs="1">
                <MudNumericField Disabled="true" HideSpinButtons="true" @bind-Value="currentPatientFile.WardDays" HelperText="Zile sectie" Variant="Variant.Text" Margin="Margin.Dense"></MudNumericField>
            </MudItem>

            <MudItem xs="1"> </MudItem>
            <MudItem xs="1">
                <MudTextField Disabled="@_disabledField" HelperText="Externare" @bind-Value="currentPatientFile.DischargeDate" Format="yyyy-MM-dd" InputType="InputType.Date" Variant="Variant.Text" Culture="@roRo"></MudTextField>
            </MudItem>

        </MudGrid>

    </MudCardContent>

    <MudDivider DividerType="DividerType.FullWidth" Class="border-3 border-solid mud-border-primary" />

    <MudCardActions>
        <MudGrid>
            <MudItem xs="1">
                <MudTooltip Text="Adauga o noua inregistrare">
                    <MudIconButton Disabled="@_disabledBtn" Icon="@Icons.Material.Filled.Add"    Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="AddNewRecord">Adauga</MudIconButton>
                </MudTooltip>

                <MudTooltip Text="Modifica inregistrarea selectata">
                    <MudIconButton Disabled="@_disabledBtn" Icon="@Icons.Material.Filled.Edit"   Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="UpdateRecord">Modifica</MudIconButton>
                </MudTooltip>

                <MudTooltip Text="Sterge inregistrarea selectata">
                    <MudIconButton Disabled="@_disabledBtn" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="DeleteRecord">Sterge</MudIconButton>
                </MudTooltip>
            </MudItem>
            <MudItem xs="1" /> <!--spacer -->
            <MudItem xs="1">
            <MudTooltip Text="Validare">
                <MudIconButton Disabled="@_disabledBtnValid" Icon="@Icons.Material.Filled.Save" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="ValidateAction">Ok</MudIconButton>
            </MudTooltip>
            <MudTooltip Text="Renuntare">
                <MudIconButton Disabled="@_disabledBtnValid" Icon="@Icons.Material.Filled.Cancel" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="DisableAll">Cancel</MudIconButton>
            </MudTooltip>
            </MudItem>
            <MudSpacer/> <!--spacer -->

            <!-- butoane detalii -->
<!--
            <MudItem xs="1">
            <MudTooltip Text="Diagnostic ">
                    <MudButton EndIcon="@Icons.Material.Filled.DeviceThermostat" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="NavigateToDiagnostic">Diagnostic</MudButton>
            </MudTooltip>
            </MudItem>
-->
            <MudItem xs="1">
                <MudTooltip Text="ATI">
                    <MudButton EndIcon="@Icons.Material.Filled.AirlineSeatFlat" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="NavigateToAtiDiagnostics">ATI</MudButton>
            </MudTooltip>
            </MudItem>
            <MudItem xs="1">
                <MudTooltip Text="Operatie">
                    <MudButton EndIcon="@Icons.Material.Filled.PrecisionManufacturing" Size="Size.Small" Variant="Variant.Text" Color="Color.Success" OnClick="NavigateToPatientSurgery">Operatie</MudButton>
                </MudTooltip>
            </MudItem>
        </MudGrid>
    </MudCardActions>

</MudCard>
<br />

<MudTabs Outlined="true">
    <MudTabPanel Text="Diagnostic Primar">
        <StgMures.Client.Pages.PatientDiagnosticsTabPage></StgMures.Client.Pages.PatientDiagnosticsTabPage>
    </MudTabPanel>
    <MudTabPanel Text="Diagnostic Secundar">
        <StgMures.Client.Pages.PatientDiagnosticsTabPage></StgMures.Client.Pages.PatientDiagnosticsTabPage>

    </MudTabPanel>
</MudTabs>


<!--table list-->
<!--<MudTable @ref="@_table" Hover="true" Dense="true" Striped="true" Elevation="5" 
          Items="@patientsFiles" @bind-customer="currentPatientFile" OnRowClick="@RowClicked" T="PatientFile"> -->

          <!-- no filter: Items="@patientsFiles" Filter="new Func<PatientFile, bool>(Search)" @bind-customer="currentPatientFile" OnRowClick="@RowClicked" T="PatientFile"> -->

<!-- NU e cazul, vor fi 2-3 fise max
    <ToolBarContent>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Cautati o categorie..." Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.currentPatientFile" IconSize="Size.Small" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Nr.Fisa</MudTh>
        <MudTh>Data Fisa</MudTh>
        <MudTh>Data Internarii</MudTh>
        <MudTh>Data Externarii</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd Class="col-1" DataLabel="Id">@context.FileNumber</MudTd>
        <MudTd Class="col-2" DataLabel="Tip">@context.FileDate</MudTd>
        <MudTd Class="col-9" DataLabel="Denumire">@context.HospitalAdmissionDate</MudTd>
        <MudTd Class="col-9" DataLabel="Denumire">@context.DischargeDate</MudTd>
    </RowTemplate>
-->
<!--fara pager,ca nu sunt atat de multe-->
    <!--
    <PagerContent>
        <MudTablePager RowsPerPageString="Randuri pagina:" PageSizeOptions="@(new int[] { 10, 25, 50 , int.MaxValue})"> R</MudTablePager>
    </PagerContent>
    -->
<!--</MudTable>-->




@code {

    [Parameter]
    public int? PatientId { get; set; }     
    // card design 
    private Patient _currentPatient = new Patient();
    private PatientFile currentPatientFile = new PatientFile();

    // table design
    private MudTable<PatientFile>? _table;  // deocamdata afisez lista de fise ale pacientului; 

    private List<PatientFile> patientsFiles = new List<PatientFile>();  // se pot selecta fisele, daca sunt mai multe.

    CultureInfo roRo = CultureInfo.GetCultureInfo("ro-RO");

    // data
    // Ar fi o idee sa afisez in fisa pacientului direct diagnosticele, dar in varianta 1 fac pagina separata.

    // private PatientFile currentPatientFile = new PatientFile() { Id = 0, Name = string.Empty };
    // private List<PatientFile> patientsFiles = new List<PatientFile>();

    protected override async Task OnInitializedAsync()
    {
        if (PatientId is null || PatientId == 0)
        {
            snackBar.Add("Nici un pacient selectat", Severity.Warning);
            // ar trebui sa cer sa aleaga un pacient, dar probabil nu voi lasa doar navigarea din lista
        }
        else

        AppMenu.SetPageTitle("Fisa Pacient");
        AppMenu.SetPatientName(_currentPatient!.FirstName + " " + _currentPatient!.LastName);   // trebuie sa fie un pacient selectat. Daca nu e, ar trebui sa oblig alegerea unui pacient

        await patientFileService.LoadPatientFilesAsync();
        patientsFiles = patientFileService.PatientFiles;
        if (patientsFiles.Count == 0)
            EnableAll();

    }



    protected void RowClicked(TableRowClickEventArgs<PatientFile> clickedCategory)
    {
        if (_table!.GetFilteredItemsCount() == 0)
            EnableAll();
        if (_table!.SelectedItem == null)
            return;
        SelectCurrentItem(clickedCategory.Item.Id);
        EnableAll();
    }



    private async Task ValidateAction()
    {
        switch (_currentAction)
        {
            case (int)_actionbtn.None:
                DisableAll();            // Invalid action, disable all 
                return;
            case (int)_actionbtn.Add:
                await patientFileService.AddPatientFile(currentPatientFile);
                snackBar.Add("Inregistrare adaugata", Severity.Success);
                break;
            case (int)_actionbtn.Edit:
                await patientFileService.UpdatePatientFile(currentPatientFile);
                snackBar.Add("Inregistrare modificata", Severity.Success);
                break;
            case (int)_actionbtn.Delete:
                if (currentPatientFile.Id == 0)               // Invalid selection
                    return;
                await patientFileService.DeletePatientFile(currentPatientFile.Id);
                snackBar.Add("Inregistrare stearsa", Severity.Success);
                break;
        }

        _currentAction = 0;
        patientsFiles = patientFileService.PatientFiles;

        DisableAll();

        await Task.Delay(1); // let UI refresh
    }

    // movers
    private string searchString = "";

    private void SelectCurrentItem(int id)
    {
        currentPatientFile = patientsFiles.FirstOrDefault(c => c.Id == id);
    }

    private bool Search(PatientFile currentPatientFile)
    {
        if (string.IsNullOrWhiteSpace(searchString)) return true;
                /*
                if (currentPatientFile.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
                    {
                return true;
        }

        */
        return false;
    }

    void NavigateToDiagnostic(MouseEventArgs e)
    {
        return; // we are on page
        if (_currentPatient.Id == 0)
        {
            snackBar.Add("Nici un pacient selectat", Severity.Error);
            NavigationManager.NavigateTo("PatientFilePage");
        }
        else
            NavigationManager.NavigateTo($"PatientFilePage/{_currentPatient.Id}");

    }
    void NavigateToAtiDiagnostics(MouseEventArgs e)
    {
        return; // to be created
        if (_currentPatient.Id == 0)
        {
            snackBar.Add("Nici un pacient selectat", Severity.Error);
            NavigationManager.NavigateTo("PatientFilePage");
        }
        else
            NavigationManager.NavigateTo($"PatientFilePage/{_currentPatient.Id}");

    }
    

    void NavigateToPatientSurgery(MouseEventArgs e)
    {
        if (_currentPatient.Id == 0)
        {
            snackBar.Add("Nici un pacient selectat", Severity.Error);
            NavigationManager.NavigateTo("PatientSurgeryPage");
        }
        else
            NavigationManager.NavigateTo($"PatientSurgeryPage/{_currentPatient.Id}");

    }
    void NavigateToTreatments(MouseEventArgs e)
    {
        if (_currentPatient.Id == 0)
        {
            snackBar.Add("Nici un pacient selectat", Severity.Error);
            NavigationManager.NavigateTo("PatientTreatmentPage");
        }
        else
            NavigationManager.NavigateTo($"PatientTreatmentPage/{_currentPatient.Id}");

    }


}
