@page "/register"
@inject IAuthService AuthService
@inject IToastService ToastService
@inject NavigationManager NavigationManager


<h3>Register</h3>


<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="form-group">
        <label for="name">Nume, prenume</label>
        <InputText id="name" @bind-Value="user.Name" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Name)" />
    </div>

    <div class="form-group">
        <label for="note">Specializare</label>
        <InputTextArea id="specialty" @bind-Value="user.Specialty" class="form-control"></InputTextArea>
    </div>


    <div class="form-group">
        <label for="email" class="required">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Email)" />
     </div>
     

    <div class="form-group">
        <label for="password" class="required">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => user.Password)" />
    </div>

     <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
     </div>

    <div class="form-group">
    <label for="note">Alte info</label>
        <InputTextArea id="note" @bind-Value="user.Note" class="form-control"></InputTextArea>
    </div>

    <div class="form-check">
        <InputCheckbox id="confirmed" @bind-Value="user.IsConfirmed" class="form-check-input"></InputCheckbox>
        <label for="confirmed" class="form-check-label">Confirmat</label>
        <ValidationMessage For="@(() => user.IsConfirmed)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>


</EditForm>


@code {
    UserRegister user = new UserRegister();

    async void HandleRegistration()
    {
        var result = await AuthService.Register(user);

        if (result.Success)
        {
            ToastService.ShowSuccess(result.Message);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ToastService.ShowError(result.Message);
        }

    }

    void HandleInvalidRegistration()
    {
        ToastService.ShowError("Internal ERROR");
    }

}
